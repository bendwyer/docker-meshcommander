---
name: Build and push image
on:
  pull_request:
    branches: [main]
    tags: ['v*']
  repository_dispatch:
    types: [bump_meshcommander_version]
  workflow_dispatch:
jobs:
  generate_metadata:
    name: Generate metadata
    runs-on: ubuntu-latest
    steps:
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install latest-version-cli package
        run: npm install --global latest-version-cli
      - name: Get latest MeshCommander package version and set to variable
        run: echo "::set-output name=npm_mc_version::$(latest-version meshcommander)"
        id: npm
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get current repository tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        id: tag
      - name: Generate Docker tags
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=pr
            type=raw,value=${{ steps.tag.outputs.tag }}
          flavor: |
            latest=true
            suffix=_${{ steps.npm.outputs.npm_mc_version }}
      - run: echo ${{ fromJSON(steps.meta.outputs.json) }}
    outputs:
      meshcommander_version: ${{ steps.npm.outputs.npm_mc_version }}
      docker_metadata: ${{ fromJSON(steps.meta.outputs.json).tags }}
  build_push_container:
    name: Build and push container
    runs-on: ubuntu-latest
    needs: generate_metadata
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Packer init
        run: packer init .
      - name: Packer validate
        run: packer validate -syntax-only .
      - name: Packer build
        run: |
          packer build -color=false -on-error=abort \
          -var meshcommander_version=${{ needs.generate_metadata.outputs.meshcommander_version }} \
          -var docker_tags=${{ needs.generate_metadata.outputs.docker_metadata }} \
          .
      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' || github.event_name != 'workflow_dispatch' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image to Docker Hub
        if: ${{ github.event_name != 'pull_request' || github.event_name != 'workflow_dispatch' }}
        run: docker image push --all-tags ${{ github.repository }}
      - name: Push description to Docker Hub
        if: ${{ github.event_name != 'pull_request' || github.event_name != 'workflow_dispatch'}}
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ github.repository }}
          short-description: ${{ github.event.repository.description }}